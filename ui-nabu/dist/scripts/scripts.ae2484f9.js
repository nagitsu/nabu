!function(){"use strict";angular.module("nabuApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ngMaterial","ui.router","ui.bootstrap","md.data.table","restangular","ui.ace","chart.js"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/dashboard"),a.state("initial",{"abstract":!0,templateUrl:"views/main.html"}).state("initial.tabs",{"abstract":!0,templateUrl:"views/tabs.html",controller:"TabsCtrl"}).state("initial.tabs.corpus",{url:"/corpus",views:{corpusSearch:{templateUrl:"views/corpus-search.html",controller:"CorpusCtrl",resolve:{sourceList:["Corpus",function(a){return a.stats().then(function(a){var b=[];return _.each(a.data.by_source,function(a){b.push(a.source)}),b.sort(),b})}]}}},params:{esQuery:null}}).state("initial.tabs.dashboard",{url:"/dashboard",views:{dashboard:{templateUrl:"views/dashboard.html",controller:"DashboardCtrl",resolve:{corpusStats:["Corpus",function(a){return a.stats().then(function(a){return a.data})}]}}}}).state("initial.tabs.embeddings",{url:"/embeddings",views:{embeddings:{templateUrl:"views/embeddings.html",controller:"EmbeddingsCtrl",resolve:{embeddingList:["Embeddings",function(a){return a.list().then(function(a){return a.data})}],pendingTrainingJobs:["JobsTraining",function(a){return a.list("queued").then(function(a){return a.data})}]}}},params:{newEmbQuery:null}}).state("initial.tabs.embeddings-detail",{url:"/embeddings/:embeddingId",views:{"embedding-detail":{templateUrl:"views/embedding-detail.html",controller:"EmbeddingDetailCtrl",resolve:{embedding:["Embeddings","$stateParams",function(a,b){return a.retrieve(b.embeddingId).then(function(a){return a.data})}],evaluationResults:["Results","$stateParams",function(a,b){return a.list(b.embeddingId).then(function(a){return a.data})}],testList:["TestSets",function(a){return a.list().then(function(a){return a.data})}],modelEnums:["Enums",function(a){return a.models().then(function(a){return a.data})}],corpusEnums:["Enums",function(a){return a.corpus().then(function(a){return a.data})}]}}}}).state("initial.tabs.tests",{url:"/tests",views:{tests:{templateUrl:"views/tests.html",controller:"TestsCtrl",resolve:{testsList:["TestSets",function(a){return a.list().then(function(a){return a.data})}],pendingTestJobs:["JobsTesting",function(a){return a.list("queued").then(function(a){return a.data})}]}}}}).state("initial.tabs.tests-detail",{url:"/tests/:testId",views:{"test-detail":{templateUrl:"views/test-detail.html",controller:"TestDetailCtrl",resolve:{testset:["TestSets","$stateParams",function(a,b){return a.retrieve(b.testId).then(function(a){return a.data})}],evaluationResults:["Results","$stateParams",function(a,b){return a.list(null,b.testId).then(function(a){return a.data})}],embeddingList:["Embeddings",function(a){return a.list().then(function(a){return a.data})}],pendingTestJobs:["JobsTesting","$stateParams",function(a,b){return a.list("queued",b.testId).then(function(a){return a.data})}],modelEnums:["Enums",function(a){return a.models().then(function(a){return a.data})}]}}}})}]).config(["$mdThemingProvider",function(a){a.theme("default")}]).run(["Restangular",function(a){a.setBaseUrl("http://golbat.ydns.eu/api"),a.setRequestSuffix("/")}])}(angular,_),function(){"use strict";angular.module("nabuApp").controller("TabsCtrl",["$rootScope","$scope","$state",function(a,b,c){b.tabs=["dashboard","corpus","embeddings","tests"],b.changeTab=function(a){var b="initial.tabs."+a;c.go(b)},b.setCurrentTab=function(a){var c=a.name.match(/tabs\.(\w+)(\.|$|-)/);b.selectedIndex=b.tabs.indexOf(c[1])},a.$on("$stateChangeStart",function(a,c,d,e,f){b.setCurrentTab(c)}),b.setCurrentTab(c.current)}])}(angular),function(){"use strict";angular.module("nabuApp").controller("CorpusCtrl",["$stateParams","$scope","$mdDialog","Corpus","sourceList",function(a,b,c,d,e){if(b.resultsTable={page:1,limit:25},b.loading=!1,b.dialogLoading=!1,b.useAdvancedQuery=!1,b.sourceList=e,b.searchQuery={query:"",sources:[]},b.matchAllQuery={query:{match_all:{}}},b.filteredMatchAllQuery={query:{filtered:{filter:{terms:{data_source:[]}}}}},b.basicQuery={query:{match:{content:""}}},b.filterSourceQuery={query:{filtered:{filter:{terms:{data_source:[]}},query:{match:{content:""}}}}},b.advancedQuery=angular.toJson(b.basicQuery,!0),a.esQuery){var f=angular.fromJson(a.esQuery);b.advancedQuery=angular.toJson({query:f},!0),b.useAdvancedQuery=!0}b.buildQuery=function(){var a;return b.useAdvancedQuery?a=angular.fromJson(b.advancedQuery):b.searchQuery.sources.length?(b.searchQuery.query?(a=b.filterSourceQuery,a.query.filtered.query.match.content=b.searchQuery.query):a=b.filteredMatchAllQuery,a.query.filtered.filter.terms.data_source=b.searchQuery.sources):b.searchQuery.query?(a=b.basicQuery,a.query.match.content=b.searchQuery.query):a=b.matchAllQuery,a},b.$watch("searchQuery",function(){var a=b.buildQuery();b.advancedQuery=angular.toJson(a,!0)},!0),b.search=function(){b.loading=!0;var a=b.buildQuery();d.search(a).then(function(a){b.resultsTable.page=1,b.results=a,b.loading=!1})},b.onPaginationChange=function(a,c){var e=b.buildQuery(),f=(a-1)*b.resultsTable.limit;return d.search(e,f).then(function(a){b.results=a})},b.aceLoaded=function(a){a.$blockScrolling=1/0},b.documentDetailDialog=function(a,d){b.dialogLoading||(b.dialogLoading=!0,c.show({controller:"DocumentDetailDialogCtrl",templateUrl:"views/document-detail.html",targetEvent:a,clickOutsideToClose:!0,resolve:{docData:["Corpus",function(a){return a.documentRetrieve(d)}]},onComplete:function(){b.dialogLoading=!1}}))}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("DocumentDetailDialogCtrl",["$scope","$mdDialog","docData",function(a,b,c){a.corpusDoc=c.data,a.cancel=function(){b.cancel()}}])}(angular),function(){"use strict";angular.module("nabuApp").factory("Corpus",["Restangular",function(a){return{search:function(b,c){return c||(c=0),a.all("corpus").all("search").post(b,{offset:c})},stats:function(){return a.all("corpus").one("stats").get()},documentRetrieve:function(b){return a.all("corpus").one("document",b).get()},enums:function(){return a.all("corpus").one("enums").get()}}}])}(angular),function(){"use strict";angular.module("nabuApp").factory("Embeddings",["Restangular",function(a){return{list:function(){return a.one("embeddings").get()},create:function(b){return a.all("embeddings").post(b)},retrieve:function(b){return a.one("embeddings",b).get()},update:function(b,c){return a.one("embeddings",b).post("",c)},"delete":function(b){return a.one("embeddings",b).remove()}}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("EmbeddingsCtrl",["$stateParams","$timeout","$interval","$scope","$mdDialog","Enums","Embeddings","JobsTraining","embeddingList","pendingTrainingJobs",function(a,b,c,d,e,f,g,h,i,j){function k(a){var b=["TRAINING","TRAINED","UNTRAINED"];return a.sort(function(a,c){return b.indexOf(a.status)-b.indexOf(c.status)}),a}function l(a){var b={};return a.forEach(function(a){b[a.embedding_id]=a}),b}d.dialogLoading=!1,d.embeddings=k(i),d.trainingJobs=l(j),d.newEmbeddingDialog=function(b){d.dialogLoading||(d.dialogLoading=!0,e.show({controller:"EmbeddingNewDialogCtrl",templateUrl:"views/embedding-new.html",targetEvent:b,clickOutsideToClose:!0,resolve:{modelEnums:["Enums",function(a){return a.models()}],corpusEnums:["Enums",function(a){return a.corpus()}]},locals:{Embeddings:g,newEmbQuery:a.newEmbQuery},onComplete:function(){d.dialogLoading=!1}}).then(function(a){a&&g.list().then(function(a){d.embeddings=k(a.data)})}))},a.newEmbQuery&&b(function(){angular.element("#new-embedding-btn").trigger("click")},100),d.trainingTimer=c(function(){h.list("queued").then(function(a){d.trainingJobs=l(a.data)})},4e3),d.$on("$destroy",function(){c.cancel(d.trainingTimer)})}])}(angular),function(){"use strict";angular.module("nabuApp").filter("titlecase",function(){return function(a){for(var b=a.split(" "),c=0;c<b.length;c++)b[c]=b[c].toLowerCase(),b[c]=b[c].charAt(0).toUpperCase()+b[c].slice(1);return b.join(" ")}})}(angular),function(){"use strict";angular.module("nabuApp").controller("EmbeddingNewDialogCtrl",["$scope","$mdDialog","Embeddings","modelEnums","corpusEnums","newEmbQuery",function(a,b,c,d,e,f){a.showErrors=!1,a.models=_.fromPairs(_.map(d.data,function(a){return[a.model,a]})),a.corpusPreprocessors=e.data,a.newEmb={model:d.data[0].model,description:"",parameters:{},preprocessing:{},query:{}},a.currentParams=[],a.$watch("newEmb.model",function(){a.newEmb.parameters={},a.currentParams=a.models[a.newEmb.model].parameters,angular.forEach(a.currentParams,function(b){a.newEmb.parameters[b.name]=b["default"]})}),a.$watch("searchQuery",function(){a.newEmb.query=angular.fromJson(a.searchQuery)}),f?a.searchQuery=angular.toJson(f,!0):a.searchQuery=angular.toJson({match:{content:""}},!0),a.aceLoaded=function(a){a.$blockScrolling=1/0},a.create=function(){a.showErrors=!1,c.create(a.newEmb).then(function(a){b.hide(!0)},function(){a.showErrors=!0})},a.cancel=function(){b.cancel()}}])}(angular,_),function(){"use strict";angular.module("nabuApp").service("Enums",["Restangular",function(a){return{models:function(){return a.all("enums").one("models").get()},corpus:function(){return a.all("enums").one("corpus").get()},tests:function(){return a.all("enums").one("tests").get()}}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("EmbeddingDetailCtrl",["$scope","$state","$interval","$mdDialog","VerifyDelete","JobsTraining","Embeddings","embedding","evaluationResults","testList","modelEnums","corpusEnums",function(a,b,c,d,e,f,g,h,i,j,k,l){function m(a,b){var c={};return a.filter(function(a){return a.model==h.model})[0].parameters.forEach(function(a){c[a.name]=a.verbose_name}),b.forEach(function(a){c[a.name]=a.verbose_name}),c}a.embedding=h,h.training_job&&(a.jobProgress=h.training_job.progress),a.testsets=_.fromPairs(_.map(j,function(a){return[a.id,a]})),a.testList=j,i.forEach(function(b){b.testsetName=a.testsets[b.testset_id].name,b.testsetDescription=a.testsets[b.testset_id].description}),i.sort(function(a,b){return a.testsetName<b.testsetName?-1:1}),a.evaluationResults=i,a.searchQuery=angular.toJson(a.embedding.corpus.query,!0),a.aceLoaded=function(a){a.setReadOnly(!0),a.$blockScrolling=1/0},a.verboseNames=m(k,l),a.formatDate=function(a){return moment(a).format("DD/MM/YYYY HH:mm")},a.formatDuration=function(a){a=moment.duration(a,"seconds");var b=Math.trunc(a.asDays()),c=Math.trunc(a.asHours()%24),d=Math.trunc(a.asMinutes()%60),e=(b>0?b+" days ":"")+(c>0?c+" hours ":"")+(d>0?d+" minutes ":"");return e},a.trainEmbedding=function(){var b={embedding_id:a.embedding.id};f.create(b).then(function(){console.log("Embedding marked for training."),g.retrieve(a.embedding.id).then(function(b){a.embedding=b.data})})},a.updateEmbedding=function(){var b={description:a.embedding.description};g.update(a.embedding.id,b).then(function(b){a.embedding=b.data})},a.deleteEmbedding=function(){var c="Are you sure you want to delete this embedding?";new e(c,"Embedding").then(function(){g["delete"](a.embedding.id).then(function(){b.go("initial.tabs.embeddings")})})},a.testResultDialog=function(b,c){a.dialogLoading||(a.dialogLoading=!0,d.show({controller:"TestResultDialogCtrl",templateUrl:"views/test-result-dialog.html",targetEvent:b,clickOutsideToClose:!0,resolve:{resultData:["Results",function(b){return b.retrieve(a.embedding.id,c).then(function(a){return a.data})}]},locals:{embedding:a.embedding,test:a.testsets[c]},onComplete:function(){a.dialogLoading=!1}}))},a.evaluateOnTestSet=function(b){a.dialogLoading||(a.dialogLoading=!0,d.show({controller:"EvaluateOnTestsetDialogCtrl",templateUrl:"views/evaluate-on-testset-dialog.html",targetEvent:b,clickOutsideToClose:!0,locals:{embedding:a.embedding,tests:a.testList},onComplete:function(){a.dialogLoading=!1}}))},a.trainingTimer=c(function(){var b=a.embedding.training_job.id;f.retrieve(b).then(function(b){a.jobProgress=b.data.progress})},4e3),a.$on("$destroy",function(){c.cancel(a.trainingTimer)})}])}(angular),function(){"use strict";angular.module("nabuApp").controller("TestsCtrl",["$scope","$interval","$mdDialog","Enums","TestSets","JobsTesting","testsList","pendingTestJobs",function(a,b,c,d,e,f,g,h){function i(b){return b.sort(function(b,c){var d,e;return d=a.testingJobs[b.id]?j(a.testingJobs,b.id):-1,e=a.testingJobs[c.id]?j(a.testingJobs,c.id):-1,d===e?b.name<c.name?-1:1:e-d}),b}function j(a,b){var c=a[b].map(function(a){return a.progress});return Math.max.apply(null,c)}function k(a){var b={};return a.forEach(function(a){b[a.testset_id]||(b[a.testset_id]=[]),b[a.testset_id].push(a)}),b}a.dialogLoading=!1,a.testingJobs=k(h),a.tests=i(g),a.isBeingRun=function(b){return void 0!==a.testingJobs[b]},a.getTestingProgress=function(b){return j(a.testingJobs,b)},a.getTestingJobCount=function(b){return a.testingJobs[b].length},a.getAllTestingJobCount=function(){return _.sum(_.map(_.values(a.testingJobs),function(a){return a.length}))},a.newTestSetDialog=function(b){a.dialogLoading||(a.dialogLoading=!0,c.show({controller:"TestNewDialogCtrl",templateUrl:"views/test-new.html",targetEvent:b,clickOutsideToClose:!0,resolve:{testEnums:["Enums",function(a){return a.tests()}]},locals:{TestSets:e},onComplete:function(){a.dialogLoading=!1}}).then(function(b){b&&e.list().then(function(b){a.tests=i(b.data)})}))},a.testingTimer=b(function(){f.list("queued").then(function(b){a.testingJobs=k(b.data)})},4e3),a.$on("$destroy",function(){b.cancel(a.testingTimer)})}])}(angular),function(){"use strict";angular.module("nabuApp").service("TestSets",["Restangular",function(a){return{list:function(){return a.one("testsets").get()},create:function(b){var c=new FormData;return c.append("name",b.name),c.append("type",b.type),c.append("file",b.file),c.append("description",b.description),a.all("testsets").withHttpConfig({transformRequest:angular.identity}).customPOST(c,"",void 0,{"Content-Type":void 0})},retrieve:function(b){return a.one("testsets",b).get()},update:function(b,c){return a.one("testsets",b).post("",c)},"delete":function(b){return a.one("testsets",b).remove()}}}])}(angular),function(){"use strict";angular.module("nabuApp").service("VerifyDelete",["$mdDialog",function(a){return function(b,c){var d=c||"Object",e=a.confirm().title("Please confirm the action").content(b).ariaLabel("Delete "+d).ok("Confirm").cancel("Cancel");return a.show(e)}}])}(angular),function(){"use strict";angular.module("nabuApp").factory("JobsTraining",["Restangular",function(a){return{list:function(b){var c=a.all("jobs").one("training");if(b){var d={status:b};return c.get(d)}return c.get()},create:function(b){return a.all("jobs").all("training").post(b)},retrieve:function(b){return a.all("jobs").one("training",b).get()},"delete":function(b){return a.all("jobs").one("training",b).remove()}}}])}(angular),function(){"use strict";angular.module("nabuApp").service("Results",["Restangular",function(a){return{list:function(b,c){var d={};return b&&(d.embedding=b),c&&(d.testset=c),a.one("results").get(d)},retrieve:function(b,c){return a.one("results",b).one("",c).get()},"delete":function(b,c){return a.one("results",b).one("",c).remove()}}}])}(angular),function(){"use strict";angular.module("nabuApp").filter("percentage",["$filter",function(a){return function(b,c){return c||(c=0),a("number")(100*b,c)+"%"}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("TestNewDialogCtrl",["$scope","$mdDialog","TestSets","testEnums",function(a,b,c,d){a.showErrors=!1,a.uploadFileName="Please select a test set file.",a.types=_.fromPairs(_.map(d.data,function(a){return[a.type,a]})),a.uploadFile=function(b){a.uploadFileName=b.target.files[0].name,a.newTestSet.file=b.target.files[0]},a.newTestSet={name:"",description:"",type:"",file:""},a.create=function(){a.showErrors=!1,c.create(a.newTestSet).then(function(a){b.hide(!0)},function(){a.showErrors=!0})},a.cancel=function(){b.cancel()}}])}(angular),function(){"use strict";angular.module("nabuApp").directive("chooseFileButton",function(){return{link:function(a,b,c){var d=b.find("button"),e=b.find("input");e.css({display:"none"}),d.bind("click",function(){e[0].click()});var f=a.$eval(c.chooseFileButton);b.bind("change",f)}}})}(angular),function(){"use strict";angular.module("nabuApp").controller("TestDetailCtrl",["$scope","$state","$mdDialog","$interval","VerifyDelete","TestSets","Results","JobsTesting","testset","evaluationResults","embeddingList","modelEnums","pendingTestJobs",function(a,b,c,d,e,f,g,h,i,j,k,l,m){function n(a){var b={};return a.forEach(function(a){b[a.model]=a.verbose_name}),b}function o(b){var c=[];return b.forEach(function(b){b.progress>0&&c.push({embedding:{id:b.embedding_id,name:a.embeddings[b.embedding_id].name},progress:b.progress})}),c}function p(b){var c=[];return b.forEach(function(b){b.progress<.01&&c.push({embedding:{id:b.embedding_id,name:a.embeddings[b.embedding_id].name}})}),c}a.dialogLoading=!1,a.testSet=i,a.embeddings=_.fromPairs(_.map(k,function(a){return[a.id,a]})),a.jobsInProgress=o(m),a.queuedJobs=p(m),j.forEach(function(b){b.embeddingModel=a.embeddings[b.embedding_id].model,b.embeddingDescription=a.embeddings[b.embedding_id].description}),j.sort(function(a,b){return b.accuracy-a.accuracy}),a.evaluationResults=j,a.verboseNames=n(l),a.formatDate=function(a){return moment(a).format("DD/MM/YYYY HH:mm")},a.testingTimer=d(function(){h.list("queued",a.testSet.id).then(function(b){a.jobsInProgress=o(b.data),a.queuedJobs=p(b.data)})},4e3),a.updateTestSet=function(){var b={name:a.testSet.name,description:a.testSet.description};f.update(a.testSet.id,b).then(function(b){a.testSet=b.data})},a.deleteTestSet=function(){var c="Are you sure you want to delete this test set?";new e(c,"Test Set").then(function(){f["delete"](a.testSet.id).then(function(){b.go("initial.tabs.tests")})})},a.testResultDialog=function(b,d){a.dialogLoading||(a.dialogLoading=!0,c.show({controller:"TestResultDialogCtrl",templateUrl:"views/test-result-dialog.html",targetEvent:b,clickOutsideToClose:!0,resolve:{resultData:["Results",function(b){return b.retrieve(d,a.testSet.id).then(function(a){return a.data})}]},locals:{embedding:a.embeddings[d],test:a.testSet},onComplete:function(){a.dialogLoading=!1}}))},a.newEmbeddingTestDialog=function(b){a.dialogLoading||(a.dialogLoading=!0,c.show({controller:"NewEmbeddingTestDialogCtrl",templateUrl:"views/test-embedding-new.html",targetEvent:b,clickOutsideToClose:!0,locals:{embeddings:k,test:a.testSet},onComplete:function(){a.dialogLoading=!1}}))},a.$on("$destroy",function(){d.cancel(a.testingTimer)})}])}(angular),function(){"use strict";angular.module("nabuApp").controller("TestResultDialogCtrl",["$scope","$mdDialog","resultData","embedding","test",function(a,b,c,d,e){a.resultData=c,a.embedding=d,a.test=e,a.cancel=function(){b.cancel()},a.formatDate=function(a){return moment(a).format("DD/MM/YYYY HH:mm")}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("NewEmbeddingTestDialogCtrl",["$scope","$mdDialog","JobsTesting","embeddings","test",function(a,b,c,d,e){a.embeddings=d,a.test=e,a.evaluationMethod,a.embeddingId,a.create=function(){a.showErrors=!1;var d=a.evaluationMethod;"single"===a.evaluationMethod&&(d=a.embeddingId),c.create(d,a.test.id).then(function(a){b.hide(!0)},function(){a.showErrors=!0})},a.cancel=function(){b.cancel()}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("EvaluateOnTestsetDialogCtrl",["$scope","$mdDialog","JobsTesting","embedding","tests",function(a,b,c,d,e){a.embedding=d,a.tests=e,a.evaluationMethod,a.testsetId,a.create=function(){a.showErrors=!1;var d=a.evaluationMethod;"single"===a.evaluationMethod&&(d=a.testsetId),c.create(a.embedding.id,d).then(function(a){b.hide(!0)},function(){a.showErrors=!0})},a.cancel=function(){b.cancel()}}])}(angular),function(){"use strict";angular.module("nabuApp").factory("JobsTesting",["Restangular",function(a){return{list:function(b,c,d){var e=a.all("jobs").one("testing"),f={};return b&&(f.status=b),c&&(f.testset=c),d&&(f.embedding=d),e.get(f)},create:function(b,c){var d={embedding_id:b,testset_id:c};return a.all("jobs").all("testing").post(d)},retrieve:function(b){return a.all("jobs").one("testing",b).get()},"delete":function(b){return a.all("jobs").one("testing",b).remove()}}}])}(angular),function(){"use strict";angular.module("nabuApp").controller("DashboardCtrl",["$interval","$scope","$mdToast","Corpus","corpusStats",function(a,b,c,d,e){function f(a){var b={};_.forEach(a.by_source,function(a){b[a.source]={},b[a.source].size=a.size}),_.forEach(a.over_time,function(a){b[a.source].over_time=[a.values]});var a=[];return _.forOwn(b,function(b,c){a.push({corpusSource:c,sourceData:b})}),a.sort(function(a,b){return b.sourceData.size-a.sourceData.size}),a}function g(a,b,c){var d=[],e=moment(b),f=b.diff(a,"days");if(a.isValid()&&b.isValid()&&!(0>=f)){for(var g=0;f>g;g++)d.push(e.subtract(1,"d").format(c));return _.reverse(d)}}b.corpusStats=f(e),b.corpusSize=e.size,b.corpusGraphSeries=["Scraped items"],b.corpusGraphLabels=g(moment().subtract(10,"days"),moment().add(1,"days"),"DD/MM"),b.corpusGraphOptions={showScale:!1,barShowStroke:!1,tooltipTemplate:"<%= label %>: <%= value.toLocaleString() %>",barValueSpacing:2},b.corpusTimer=a(function(){d.stats().then(function(a){var d=b.corpusSize;b.corpusStats=f(a.data),b.corpusSize=a.data.size;var e=b.corpusSize-d;e>0&&c.show(c.simple({hideDelay:5e3,position:"bottom right"}).content("We just got "+e.toLocaleString()+" new words!"))})},1e4),b.$on("$destroy",function(){a.cancel(b.corpusTimer)})}])}(angular,moment),angular.module("nabuApp").run(["$templateCache",function(a){"use strict";a.put("views/corpus-search.html",'<div class="tab-container"> <form flex name="search-form"> <div layout="column"> <div layout="row" collapse="useAdvancedQuery"> <div flex="5" layout="row" layout-align="center center"> <i class="fa fa-search fa-2x"></i> </div> <md-input-container flex="30"> <label>Search</label> <input type="text" ng-model="searchQuery.query"> </md-input-container> <md-input-container flex="25"> <label>Filter source</label> <md-select ng-model="searchQuery.sources" multiple> <md-option ng-repeat="source in sourceList" value="{{source}}">{{source}}</md-option> </md-select> </md-input-container> </div> <div layout="row" layout-sm="column" layout-wrap collapse="!useAdvancedQuery"> <md-input-container class="md-block es-query-box-block" flex="40" flex-sm="80"> <span class="md-label-sim">Elasticsearch query <div class="es-query-box" ng-model="advancedQuery" ui-ace="{\n              useWrapMode : true,\n              showGutter: true,\n              mode: \'json\',\n              onLoad: aceLoaded,\n              onChange: aceChanged\n            }"> </div> </span></md-input-container> </div> <div layout="row"> <md-switch ng-model="useAdvancedQuery" aria-label="Use advanced query"> Use advanced query </md-switch> </div> <div layout="row"> <md-input-container flex="15"> <md-button class="md-raised corpus-search-btn md-primary md-hue-4" ng-click="search()"> SEARCH </md-button> </md-input-container> <span flex></span> </div> </div> </form> <div ng-show="results.data.hits.length > 0 && !loading"> <md-data-table-toolbar> <h2 class="md-title">Results</h2> <span flex></span> <md-fab-speed-dial md-direction="left" class="md-scale"> <md-fab-trigger> <md-button aria-label="menu" class="md-fab"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-bars"></md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button class="md-fab md-mini" aria-label="Embedding from query" ui-sref="initial.tabs.embeddings({newEmbQuery: buildQuery().query})"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-magic"></md-icon> <md-tooltip md-direction="top">Embedding From Query</md-tooltip> </md-button> <md-button class="md-fab md-mini" aria-label="Download corpus" href="http://golbat.ydns.eu/api{{results.data.download_link}}" download> <md-icon class="fab-btn-icon" md-font-icon="fa fa-download"></md-icon> <md-tooltip md-direction="top">Download Corpus</md-tooltip> </md-button> </md-fab-actions> </md-fab-speed-dial> </md-data-table-toolbar> <md-data-table-container> <table md-data-table md-progress="deferred" class="corpus-search-results"> <thead> <tr> <th name="Date Scraped"></th> <th name="Snippet"></th> <th name="Source"></th> </tr> </thead> <tbody> <tr md-auto-select ng-repeat="result in results.data.hits" ng-click="documentDetailDialog($event, result.document_id)"> <td>{{result.date_scraped | date:\'dd/MM/yyyy\'}}</td> <td ng-bind-html="result.snippet"></td> <td>{{result.source}}</td> </tr> </tbody> </table> </md-data-table-container> <md-data-table-pagination md-limit="resultsTable.limit" md-page="resultsTable.page" md-total="{{results.meta.count}}" md-trigger="onPaginationChange" md-row-select="[resultsTable.limit]"> </md-data-table-pagination> </div> <div ng-if="loading" layout="row" layout-align="center center"> <md-progress-circular md-mode="indeterminate"></md-progress-circular> </div> <div ng-if="results.data.hits.length == 0 && !loading" layout="row"> <div layout="column" layout-align="start center"> <h2 class="md-title no-results">No results</h2> </div> </div> </div>'),a.put("views/dashboard.html",'<div layout-padding class="tab-container"> <div layout-padding layout="row"> <h3> The corpus currently has <span style="color: #FF4081">{{corpusSize | number}}</span> words! </h3> </div> <div layout="row" layout-align="center center" layout-wrap> <md-card class="source-card" ng-repeat="source in corpusStats"> <md-card-content> <div class="md-title" layout="row" layout-wrap> <a href="http://{{source.corpusSource}}/">{{source.corpusSource}}</a> </div> <p>Size: {{source.sourceData.size | number}}</p> <div flex layout="row"> <canvas id="{{source.corpusSource}}-bar" class="chart chart-bar" height="100" chart-data="source.sourceData.over_time" chart-labels="corpusGraphLabels" chart-series="corpusGraphSeries" chart-colours="[{fillColor: \'#3F51B5\'}]" chart-options="corpusGraphOptions"> </canvas> </div> </md-card-content> </md-card> </div> </div>'),a.put("views/document-detail.html",'<md-dialog class="doc-detail-dialog" aria-label="{{corpusDoc.metadata.title}}" ng-cloak> <md-toolbar> <div class="md-toolbar-tools"> <h2>{{corpusDoc.metadata.title}}</h2> <span flex></span> <md-button class="md-icon-button" ng-click="cancel()"> <i aria-label="Close" class="fa fa-close"></i> </md-button> </div> </md-toolbar> <md-dialog-content> <div class="md-dialog-content"> <div layout="row"> <div flex> <h5>Source: <i>{{corpusDoc.data_source}}</i></h5> <h5 ng-show="corpusDoc.tags.length">Tags: <i>{{corpusDoc.tags.join(\', \')}}</i></h5> <h5>Word count: <i>{{corpusDoc.word_count}}</i></h5> </div> <div flex> <h5 ng-show="corpusDoc.metadata.date"> Date: <i>{{corpusDoc.metadata.date | date:\'dd/MM/yyyy\'}}</i> </h5> <h5>Date scraped: <i>{{corpusDoc.date_scraped | date:\'dd/MM/yyyy\'}}</i></h5> </div> </div> <md-divider></md-divider> <span class="doc-content">{{corpusDoc.content}}</span> </div> </md-dialog-content> <div class="md-actions" layout="row"> <md-button href="{{corpusDoc.permalink}}" target="_blank" md-autofocus> View source </md-button> </div> </md-dialog>'),a.put("views/embedding-detail.html",'<div layout-padding class="tab-container"> <div layout-padding layout="row"> <div layout="column"> <small class="section-header"> <a ui-sref="initial.tabs.embeddings">Embeddings</a> > <b>Embedding #{{embedding.id}}</b> </small> <div layout="row" class="emb-detail-name"> <div ng-class="embedding.status | lowercase" class="status"> <md-tooltip md-direction="bottom">{{embedding.status | titlecase}}</md-tooltip> </div> <p>{{embedding.name}}</p> </div> </div> <span flex></span> <md-fab-speed-dial md-direction="left" class="md-scale"> <md-fab-trigger> <md-button aria-label="menu" class="md-fab"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-bars"></md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button class="md-fab md-mini" aria-label="Download embedding" href="http://golbat.ydns.eu/api{{embedding.download_link}}" download ng-show="embedding.status == \'TRAINED\'"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-download"></md-icon> <md-tooltip md-direction="top">Download Embedding</md-tooltip> </md-button> <md-button class="md-fab md-mini" aria-label="Train embedding" ng-click="trainEmbedding()" ng-show="embedding.status == \'UNTRAINED\'"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-lightbulb-o"></md-icon> <md-tooltip md-direction="top">Train Embedding</md-tooltip> </md-button> <md-button class="md-fab md-mini" aria-label="Delete embedding" ng-click="deleteEmbedding()"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-trash-o"></md-icon> <md-tooltip md-direction="top">Delete Embedding</md-tooltip> </md-button> </md-fab-actions> </md-fab-speed-dial> </div> <div ng-show="embedding.status == \'TRAINING\'"> <div class="embedding-progress-container" layout="row"> <div class="embedding-progress-bar" style="width: {{100 * jobProgress}}%"> </div> <md-tooltip md-direction="top">Progress: {{100 * jobProgress | number:1}}%</md-tooltip> </div> </div> <div layout-padding layout="row" layout-sm="column"> <md-input-container flex="40" flex-sm="90"> <label>Description</label> <textarea ng-blur="updateEmbedding()" ng-model="embedding.description" columns="1"></textarea> </md-input-container> <span flex="15"></span> <md-input-container flex="40" flex-sm="90"> <label>Corpus Size</label> <textarea ng-readonly="true" columns="1">{{embedding.corpus.size | number}}</textarea> </md-input-container> </div> <div layout-padding layout="row" layout-sm="column"> <div layout="column" flex="40" flex-sm="90"> <md-data-table-container> <span layout-padding class="md-label-sim">Model Parameters</span> <table layout-padding md-data-table md-progress="deferred" class="corpus-search-results"> <thead md-order="parametersTable.order" md-trigger="onOrderChange"> <tr> <th name="Parameter" order-by="parameter"></th> <th name="Value" order-by="value"></th> </tr> </thead> <tbody> <tr md-auto-select ng-repeat="(prop, value) in embedding.parameters"> <td>{{verboseNames[prop]}}</td> <td>{{value || \'--\'}}</td> </tr> </tbody> </table> </md-data-table-container> <md-data-table-container class="training-information" ng-show="embedding.status == \'TRAINED\'"> <span layout-padding class="md-label-sim">Training Information</span> <table layout-padding md-data-table md-progress="deferred" class="corpus-search-results"> <tbody> <tr md-auto-select> <td>Elapsed Time</td> <td>{{formatDuration(embedding.training_job.elapsed_time)}}</td> </tr> <tr md-auto-select> <td>Scheduled Date</td> <td>{{formatDate(embedding.training_job.scheduled_date)}}</td> </tr> </tbody> </table> </md-data-table-container> </div> <span flex="15" class="emb-separator"> <div class="vertical-separator"></div> </span> <div layout="column" flex="40" flex-sm="90"> <md-data-table-container flex> <span layout-padding class="md-label-sim">Corpus Preprocessing</span> <table layout-padding md-data-table md-progress="deferred" class="corpus-search-results"> <thead md-order="preprocessingTable.order" md-trigger="onOrderChange"> <tr> <th name="Parameter" order-by="parameter"></th> <th name="Value" order-by="value"></th> </tr> </thead> <tbody> <tr md-auto-select ng-repeat="(prop, value) in embedding.corpus.preprocessing"> <td>{{verboseNames[prop]}}</td> <td>{{value || \'--\'}}</td> </tr> </tbody> </table> </md-data-table-container> <md-input-container class="embedding-query md-block" flex> <div layout="row"> <span class="md-label-sim">Elasticsearch query</span> <span flex></span> <span class="text-right"> <a ui-sref="initial.tabs.corpus({esQuery: searchQuery})">Run query</a> </span> </div> <div class="es-query-box" ng-model="searchQuery" ui-ace="{\n            useWrapMode: true,\n            showGutter: true,\n            mode: \'json\',\n            onLoad: aceLoaded,\n            onChange: aceChanged\n          }"> </div> </md-input-container> </div> </div> <div class="embedding-result-container" layout="row" flex> <md-data-table-container flex> <div layout="row" layout-align="center center"> <h4>Evaluation results</h4> <span flex></span> <md-button class="md-fab md-mini" aria-label="Evaluate on test set" ng-click="evaluateOnTestSet($event)"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-plus"></md-icon> <md-tooltip md-direction="left">Evaluate on test set</md-tooltip> </md-button> </div> <table ng-show="evaluationResults.length > 0" layout-padding md-data-table md-progress="deferred" class="corpus-search-results"> <thead md-order="evaluation.order"> <tr> <th name="Date" order-by="creation_date"></th> <th name="Name" order-by="testsetName"></th> <th name="Description"></th> <th name="Accuracy" order-by="accuracy"></th> <th name="Ranking" order-by="embedding_rank"> <md-tooltip md-direction="left">Ranking for the given test set</md-tooltip> </th> <th></th> </tr> </thead> <tbody> <tr md-auto-select ng-repeat="result in evaluationResults | orderBy: evaluation.order"> <td>{{formatDate(result.creation_date)}}</td> <td> <a ui-sref="initial.tabs.tests-detail({testId: result.testset_id})"> {{result.testsetName}} </a> </td> <td>{{result.testsetDescription}}</td> <td>{{result.accuracy | percentage}}</td> <td> <span>#{{result.embedding_rank}}</span> <span class="rank-best" ng-show="result.embedding_rank == 1">best!</span> </td> <td> <a ng-click="testResultDialog($event, result.testset_id)" href=""> <i class="fa fa-eye fa-2x"></i> </a> </td> </tr> </tbody> </table> </md-data-table-container> </div> </div>'),
a.put("views/embedding-new.html",'<md-dialog flex="85" class="nabu-dialog" aria-label="Create new embedding" ng-cloak> <md-toolbar> <div class="md-toolbar-tools"> <h2>Create new embedding</h2> <span flex></span> <md-button class="md-icon-button" ng-click="cancel()"> <i aria-label="Close" class="fa fa-close"></i> </md-button> </div> </md-toolbar> <md-dialog-content> <div class="md-dialog-content"> <form name="newEmbeddingForm"> <div layout="row" layout-sm="column"> <md-input-container flex="20" flex-sm="100"> <label>Model</label> <md-select ng-model="newEmb.model"> <md-option ng-repeat="model in models" value="{{model.model}}"> {{model.verbose_name}} </md-option> </md-select> </md-input-container> <md-input-container flex="80" flex-sm="100"> <label>Description</label> <textarea ng-model="newEmb.description" columns="1"></textarea> </md-input-container> </div> <h4>Model parameters</h4> <div layout="row" layout-sm="column" layout-wrap> <md-input-container class="md-block" flex="50" flex-sm="100" ng-repeat="param in currentParams"> <div ng-if="param.type == \'bool\'"> <span class="md-label-sim">{{param.verbose_name}}</span> <md-switch ng-model="newEmb.parameters[param.name]" aria-label="{{param.description}}" layout-align="start end"> </md-switch> </div> <label ng-if="param.type != \'bool\'">{{param.verbose_name}}</label> <input ng-if="param.type == \'str\'" ng-model="newEmb.parameters[param.name]"> <input ng-if="param.type == \'float\' || param.type == \'int\'" type="number" ng-model="newEmb.parameters[param.name]"> <md-select ng-if="param.type == \'options\'" ng-model="newEmb.parameters[param.name]"> <md-option ng-repeat="opt in param.values" value="{{opt.name}}"> {{opt.verbose_name}} </md-option> </md-select> <md-tooltip md-direction="top">{{param.description}}</md-tooltip> </md-input-container> </div> <h4>Query</h4> <div layout="row" layout-sm="column" layout-wrap> <md-input-container class="md-block" flex="50" flex-sm="100"> <span class="md-label-sim">Elasticsearch query</span> <div class="es-query-box" ng-model="searchQuery" ui-ace="{\n                  useWrapMode : true,\n                  showGutter: true,\n                  mode: \'json\',\n                  onLoad: aceLoaded,\n                  onChange: aceChanged\n                }"> </div> </md-input-container> </div> <h4>Preprocessing</h4> <div layout="row" layout-sm="column" layout-wrap> <md-input-container class="md-block" flex="50" flex-sm="100" ng-repeat="prep in corpusPreprocessors"> <div ng-if="prep.type == \'bool\'"> <span class="md-label-sim">{{prep.verbose_name}}</span> <md-switch ng-model="newEmb.preprocessing[prep.name]" aria-label="{{prep.description}}" layout-align="start end" ng-init="newEmb.preprocessing[prep.name] = prep.default"> </md-switch> </div> <label ng-if="prep.type != \'bool\'">{{prep.verbose_name}}</label> <input ng-if="prep.type == \'str\'" ng-model="newEmb.preprocessing[prep.name]" ng-init="newEmb.preprocessing[prep.name] = prep.default"> <input ng-if="prep.type == \'float\' || prep.type == \'int\'" type="number" ng-model="newEmb.preprocessing[prep.name]" ng-init="newEmb.preprocessing[prep.name] = prep.default"> <md-select ng-if="prep.type == \'options\'" ng-model="newEmb.preprocessing[prep.name]" ng-init="newEmb.preprocessing[prep.name] = prep.default"> <md-option ng-repeat="opt in prep.values" value="{{opt.name}}"> {{opt.name}} </md-option> </md-select> <md-tooltip md-direction="top">{{prep.description}}</md-tooltip> </md-input-container> </div> </form> </div> </md-dialog-content> <div class="md-actions" layout-align="space-between center" layout="row"> <span ng-show="showErrors" class="error-message" flex>There was an error creating the embedding.</span> <div layout="row" layout-align="end center" flex> <md-button md-autofocus ng-click="create()">Create</md-button> </div> </div> </md-dialog>'),a.put("views/embeddings.html",'<div class="tab-container"> <div layout="row"> <span flex></span> <md-button id="new-embedding-btn" class="md-fab md-mini" aria-label="New embedding" ng-click="newEmbeddingDialog($event)"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-plus"></md-icon> <md-tooltip md-direction="left">New Embedding</md-tooltip> </md-button> </div> <div ng-repeat="embedding in embeddings"> <div class="card-progress" ng-if="embedding.status != \'TRAINING\'"></div> <div class="card-progress" ng-if="embedding.status == \'TRAINING\'" style="width: {{100 * trainingJobs[embedding.id].progress | number:6}}%"></div> <md-card class="nabu-card" ui-sref="initial.tabs.embeddings-detail({embeddingId: embedding.id})" layout="row" layout-align="space-between center" layout-wrap> <div class="card-model card-{{embedding.model | lowercase}}" layout="column" layout-align="center center"> {{embedding.model[0] | uppercase}} <md-tooltip md-direction="right">{{embedding.model}}</md-tooltip> </div> <div class="card-content" layout="column" layout-align="space-between start"> <div class="card-name">{{embedding.name}}</div> <div class="card-description">{{embedding.description}}</div> </div> <div class="card-status" layout="row" layout-align="center center"> <div class="card-status-{{embedding.status | lowercase}}"> <md-tooltip md-direction="left" ng-if="embedding.status != \'TRAINING\'"> {{embedding.status | titlecase}} </md-tooltip> <md-tooltip md-direction="left" ng-if="embedding.status == \'TRAINING\'"> {{embedding.status | titlecase}} - {{100 * trainingJobs[embedding.id].progress | number:1}}% </md-tooltip> </div> </div> </md-card> </div> </div>'),a.put("views/evaluate-on-testset-dialog.html",'<md-dialog flex="85" class="nabu-dialog" aria-label="Evaluate the embedding on a test set" ng-cloak> <md-toolbar> <div class="md-toolbar-tools"> <h2>Evaluate the embedding on a test set</h2> <span flex></span> <md-button class="md-icon-button" ng-click="cancel()"> <i aria-label="Close" class="fa fa-close"></i> </md-button> </div> </md-toolbar> <md-dialog-content> <div class="md-dialog-content"> <div class="dialog-instructions"> <p>Please select how to evaluate the embedding.</p> </div> <form name="evaluateEmbeddingForm"> <div layout="row" layout-sm="column"> <md-input-container flex="80"> <label>Evaluation method</label> <md-select ng-model="evaluationMethod"> <md-option value="missing">Evaluate on the missing tests</md-option> <md-option value="full">Evaluate on all the tests</md-option> <md-option value="single">Evaluate on a particular test</md-option> </md-select> </md-input-container> </div> <div layout="row" layout-sm="column" ng-show="evaluationMethod == \'single\'"> <md-input-container flex="80"> <label>Test</label> <md-select ng-model="testsetId"> <md-option ng-repeat="ts in tests" ng-value="{{ts.id}}"> {{ts.name}} ({{ts.description}}) </md-option> </md-select> </md-input-container> </div> </form> </div> </md-dialog-content> <div class="md-actions" layout-align="space-between center" layout="row"> <span ng-show="showErrors" class="error-message" flex>There was an error creating the test.</span> <div layout="row" layout-align="end center" flex> <md-button md-autofocus ng-click="create()">Create</md-button> </div> </div> </md-dialog>'),a.put("views/main.html",'<md-toolbar> <div class="md-toolbar-tools"> <h2> <span class="logo">Nabu</span> </h2> </div> </md-toolbar> <ui-view></ui-view>'),a.put("views/tabs.html",'<md-tabs md-center-tabs md-dynamic-height md-stretch-tabs="always" md-selected="selectedIndex"> <md-tab label="Dashboard" ng-click="changeTab(\'dashboard\')"> <md-content> <div ui-view="dashboard"></div> </md-content> </md-tab> <md-tab label="Corpus" ng-click="changeTab(\'corpus\')"> <md-content> <div ui-view="corpusSearch"></div> </md-content> </md-tab> <md-tab label="Embeddings" ng-click="changeTab(\'embeddings\')"> <md-content> <div ui-view="embeddings"></div> <div ui-view="embedding-detail"></div> </md-content> </md-tab> <md-tab label="Tests" ng-click="changeTab(\'tests\')"> <md-content> <div ui-view="tests"></div> <div ui-view="test-detail"></div> </md-content> </md-tab> </md-tabs>'),a.put("views/test-detail.html",'<div layout-padding class="tab-container"> <div layout-padding layout="row"> <div layout="column"> <small class="section-header"> <a ui-sref="initial.tabs.tests">Tests</a> > <b>{{testSet.name}}</b> </small> <div layout="row" class="emb-detail-name"> <p>{{testSet.type | uppercase}}</p> </div> </div> <span flex></span> <md-fab-speed-dial md-direction="left" class="md-scale"> <md-fab-trigger> <md-button aria-label="menu" class="md-fab"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-bars"></md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button class="md-fab md-mini" aria-label="Download test set file" href="http://golbat.ydns.eu/api{{testSet.download_link}}" download> <md-icon class="fab-btn-icon" md-font-icon="fa fa-download"></md-icon> <md-tooltip md-direction="top">Download Test Set File</md-tooltip> </md-button> <md-button class="md-fab md-mini" aria-label="Delete test set" ng-click="deleteTestSet()"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-trash-o"></md-icon> <md-tooltip md-direction="top">Delete Test Set</md-tooltip> </md-button> </md-fab-actions> </md-fab-speed-dial> </div> <div layout-padding layout="row" layout-sm="column"> <md-input-container flex="40" flex-sm="90"> <label>Name</label> <textarea ng-blur="updateTestSet()" ng-model="testSet.name" columns="1"></textarea> </md-input-container> <span flex="15"></span> <md-input-container flex="40" flex-sm="90"> <label>Description</label> <textarea ng-blur="updateTestSet()" ng-model="testSet.description" columns="1"></textarea> </md-input-container> </div> <div layout-padding layout="row"> <h4>Example</h4> </div> <div layout-padding layout="row"> <div ng-bind="testSet.sample_entry" class="quote-text"></div> </div> <div layout="column" flex> <div layout="row" layout-align="center center"> <h4>Running tests</h4> <span flex></span> </div> <div class="job-container" ng-show="jobsInProgress.length > 0 || queuedJobs.length > 0"> <div class="job-container-current"> Current: <span ng-repeat="job in jobsInProgress | orderBy: job.progress"> <a ui-sref="initial.tabs.embeddings-detail({embeddingId: job.embedding.id})"> #{{job.embedding.id}}<span ng-show="!$last">,</span> </a> <md-tooltip md-direction="top">{{job.embedding.name}}</md-tooltip> </span> </div> <div class="test-progress-container" layout="row" ng-repeat="job in jobsInProgress | orderBy: job.progress"> <div class="test-progress-bar" style="width: {{100 * job.progress}}%"> </div> <md-tooltip md-direction="top"> Embedding #{{job.embedding.id}}, progress: {{100 * job.progress | number:1}}% </md-tooltip> </div> <div class="job-container-next"> Next up: <span ng-repeat="job in queuedJobs"> <a ui-sref="initial.tabs.embeddings-detail({embeddingId: job.embedding.id})"> #{{job.embedding.id}}<span ng-show="!$last">,</span> </a> <md-tooltip md-direction="top">{{job.embedding.name}}</md-tooltip> </span> </div> </div> </div> <div layout="row" flex> <md-data-table-container flex> <div layout="row" layout-align="center center"> <h4>Evaluation results</h4> <span flex></span> <md-button class="md-fab md-mini" aria-label="New Embedding Test" ng-click="newEmbeddingTestDialog($event)"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-plus"></md-icon> <md-tooltip md-direction="left">New Embedding Test</md-tooltip> </md-button> </div> <table ng-show="evaluationResults.length > 0" layout-padding md-data-table md-progress="deferred" class="corpus-search-results"> <thead md-order="evaluation.order" md-trigger="onOrderChange"> <tr> <th name="Date" order-by="creation_date"></th> <th name="Embedding Description" order-by="embeddingDescription"></th> <th name="Embedding Model" order-by="embeddingModel"></th> <th name="Accuracy" order-by="accuracy" md-order-by="accuracy"></th> <th name="Details"></th> </tr> </thead> <tbody> <tr md-auto-select ng-repeat="result in evaluationResults | orderBy: evaluation.order"> <td>{{formatDate(result.creation_date)}}</td> <td> <a ui-sref="initial.tabs.embeddings-detail({embeddingId: result.embedding_id})"> {{embeddings[result.embedding_id].description}}</a></td>  <td>{{verboseNames[embeddings[result.embedding_id].model]}}</td> <td>{{result.accuracy | percentage}}</td> <td> <a ng-click="testResultDialog($event, result.embedding_id)" href=""> <i class="fa fa-eye fa-2x"></i> </a> </td> </tr> </tbody> </table> </md-data-table-container> </div> </div>'),a.put("views/test-embedding-new.html",'<md-dialog flex="85" class="nabu-dialog" aria-label="Run the test on an embedding" ng-cloak> <md-toolbar> <div class="md-toolbar-tools"> <h2>Run the test on an embedding</h2> <span flex></span> <md-button class="md-icon-button" ng-click="cancel()"> <i aria-label="Close" class="fa fa-close"></i> </md-button> </div> </md-toolbar> <md-dialog-content> <div class="md-dialog-content"> <div class="dialog-instructions"> <p>Please select how to run the test.</p> </div> <form name="newEmbeddingTestForm"> <div layout="row" layout-sm="column"> <md-input-container flex="80"> <label>Evaluation method</label> <md-select ng-model="evaluationMethod"> <md-option value="missing">Evaluate on the missing embeddings</md-option> <md-option value="full">Evaluate on all the embeddings</md-option> <md-option value="single">Evaluate on a particular embedding</md-option> </md-select> </md-input-container> </div> <div layout="row" layout-sm="column" ng-show="evaluationMethod == \'single\'"> <md-input-container flex="80"> <label>Embedding</label> <md-select ng-model="embeddingId"> <md-option ng-repeat="emb in embeddings" ng-value="{{emb.id}}"> {{emb.name}} </md-option> </md-select> </md-input-container> </div> </form> </div> </md-dialog-content> <div class="md-actions" layout-align="space-between center" layout="row"> <span ng-show="showErrors" class="error-message" flex>There was an error creating the test.</span> <div layout="row" layout-align="end center" flex> <md-button md-autofocus ng-click="create()">Create</md-button> </div> </div> </md-dialog>'),a.put("views/test-new.html",'<md-dialog flex="85" class="nabu-dialog" aria-label="Create new test set" ng-cloak> <md-toolbar> <div class="md-toolbar-tools"> <h2>Create new test set</h2> <span flex></span> <md-button class="md-icon-button" ng-click="cancel()"> <i aria-label="Close" class="fa fa-close"></i> </md-button> </div> </md-toolbar> <md-dialog-content> <div class="md-dialog-content"> <form name="newTestSetForm"> <div layout="row" layout-sm="column"> <md-input-container flex="35" flex-sm="100"> <label>Name</label> <input ng-model="newTestSet.name"> </md-input-container> <md-input-container flex="65" flex-sm="100"> <label>Description</label> <textarea ng-model="newTestSet.description" columns="1"></textarea> </md-input-container> </div> <div layout="row" layout-sm="column"> <md-input-container flex="35" flex-sm="100"> <label>Type</label> <md-select ng-model="newTestSet.type"> <md-option ng-repeat="type in types" value="{{type.type}}"> {{type.verbose_name}} </md-option> </md-select> </md-input-container> <md-input-container flex="65" flex-sm="100"> <choose-file-button> <md-button aria-label="Upload test set file" class="md-fab md-mini"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-cloud-upload"></md-icon> <md-tooltip md-direction="right">Select test set file</md-tooltip> </md-button> <input choose-file-button="uploadFile" type="file"> <span ng-bind="uploadFileName"></span> </choose-file-button> </md-input-container> </div> </form> </div> </md-dialog-content> <div class="md-actions" layout-align="space-between center" layout="row"> <span ng-show="showErrors" class="error-message" flex>There was an error creating the test set.</span> <div layout="row" layout-align="end center" flex> <md-button md-autofocus ng-click="create()">Create</md-button> </div> </div> </md-dialog>'),a.put("views/test-result-dialog.html",'<md-dialog class="test-result-dialog" aria-label="Test result details" ng-cloak> <md-toolbar> <div class="md-toolbar-tools"> <h2>Test result details</h2> <span flex></span> <md-button class="md-icon-button" ng-click="cancel()"> <i aria-label="Close" class="fa fa-close"></i> </md-button> </div> </md-toolbar> <md-dialog-content> <div class="md-dialog-content"> <div class="result-dialog-section"> <h4>Evaluation Information</h4> <div layout="row"> <div flex> <h5><strong>Test set</strong>: {{test.name}}</h5> <h5><strong>Embedding</strong>: {{embedding.description}}</h5> </div> <div flex> <h5><strong>Date</strong>: {{formatDate(resultData.creation_date)}}</h5> <h5><strong>Accuracy</strong>: {{resultData.accuracy | percentage}}</h5> </div> </div> </div> <div class="result-dialog-section"> <h4>Entries Information</h4> <md-data-table-container flex> <table layout-padding md-data-table md-progress="deferred"> <tbody> <tr title="{{resultData.extended.missing_words.join(\', \')}}"> <td>Missing Words</td> <td>{{resultData.extended.missing_words.length}}</td> </tr> <tr> <td style="width: 50%">Missing Entries</td> <td>{{resultData.extended.failed_entries.missing.length}}</td> </tr> <tr ng-show="{{resultData.extended.failed_entries.wrong !== undefined}}"> <td> Wrong Entries <md-tooltip md-direction="left">Outside top 10</md-tooltip> </td> <td>{{resultData.extended.failed_entries.wrong.length}}</td> </tr> <tr> <td>Total Entries</td> <td>{{resultData.extended.total}}</td> </tr> </tbody> </table> </md-data-table-container> </div> <div class="result-dialog-section" ng-show="resultData.extended.top1_add"> <h4>Extended Result Information</h4> <md-data-table-container flex> <table layout-padding md-data-table md-progress="deferred"> <tbody> <tr> <td style="width: 50%">Top 1 (<span class="method-name">3CosAdd</span>)</td> <td>{{resultData.extended.top1_add | number:2}}</td> </tr> <tr> <td>Top 1 (<span class="method-name">3CosMul</span>)</td> <td>{{resultData.extended.top1_mul | number:2}}</td> </tr> <tr> <td>Top 5 (<span class="method-name">3CosAdd</span>)</td> <td>{{resultData.extended.top5_add | number:2}}</td> </tr> <tr> <td>Top 5 (<span class="method-name">3CosMul</span>)</td> <td>{{resultData.extended.top5_mul | number:2}}</td> </tr> <tr> <td>Top 10 (<span class="method-name">3CosAdd</span>)</td> <td>{{resultData.extended.top10_add | number:2}}</td> </tr> <tr> <td>Top 10 (<span class="method-name">3CosMul</span>)</td> <td>{{resultData.extended.top10_mul | number:2}}</td> </tr> </tbody> </table> </md-data-table-container> </div> </div> </md-dialog-content> </md-dialog>'),a.put("views/tests.html",'<div class="tab-container"> <div layout="row"> <span flex></span> <div class="tests-count" layout="column" layout-align="center center"> ({{getAllTestingJobCount()}} tests being run) </div> <md-button class="md-fab md-mini" aria-label="New Test set" ng-click="newTestSetDialog($event)"> <md-icon class="fab-btn-icon" md-font-icon="fa fa-plus"></md-icon> <md-tooltip md-direction="left">New Test Set</md-tooltip> </md-button> </div> <div ng-repeat="test in tests"> <div class="card-progress" ng-if="!isBeingRun(test.id)"></div> <div class="card-progress" ng-if="isBeingRun(test.id)" style="width: {{100 * getTestingProgress(test.id) | number:6}}%"></div> <md-card class="nabu-card" ui-sref="initial.tabs.tests-detail({testId: test.id})" layout="row" layout-align="space-between center" layout-wrap> <div class="card-model card-{{test.type | lowercase}}" layout="column" layout-align="center center"> {{test.type[0] | uppercase}} <md-tooltip md-direction="right">{{test.type | titlecase}}</md-tooltip> </div> <div class="card-content" layout="column" layout-align="space-between start"> <div class="card-name">{{test.name}}</div> <div class="card-description">{{test.description}}</div> </div> <div class="card-status" layout="row" layout-align="center center"> <div class="card-status-testing" ng-if="isBeingRun(test.id)"> {{getTestingJobCount(test.id)}} <md-tooltip md-direction="left"> {{getTestingJobCount(test.id)}} embedding(s) being evaluated </md-tooltip> </div> </div> </md-card> </div> </div>')}]);